using MTAA_Backend.Domain.Entities.Posts;
using MTAA_Backend.Domain.Entities.Posts.Comments;
using MTAA_Backend.Domain.Entities.Shared;
using MTAA_Backend.Domain.Entities.Users;
using MTAA_Backend.Domain.Resources.Notifications;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MTAA_Backend.Domain.Entities.Notifications
{
    /// <summary>
    /// Represents a notification sent to a user within the application.
    /// Inherits from <see cref="BaseEntity"/> for common entity properties like creation and update timestamps.
    /// </summary>
    public class Notification : BaseEntity
    {
        /// <summary>
        /// Gets or sets the unique identifier for the notification.
        /// A new GUID is generated by default upon instantiation.
        /// </summary>
        public Guid Id { get; set; } = Guid.NewGuid();

        /// <summary>
        /// Gets or sets the title of the notification.
        /// </summary>
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets the main text content of the notification.
        /// </summary>
        public string Text { get; set; }

        /// <summary>
        /// Gets or sets the type of notification (e.g., PostLike, Comment, Follow).
        /// </summary>
        public NotificationType Type { get; set; }

        /// <summary>
        /// Gets or sets the foreign key to the associated <see cref="Post"/> if the notification relates to a post.
        /// Nullable, as not all notifications are post-related.
        /// </summary>
        public Guid? PostId { get; set; }

        /// <summary>
        /// Gets or sets the navigation property to the associated <see cref="Post"/>.
        /// This property is marked as nullable, but consider if a notification type
        /// specifically requires a Post to always be present. If so, it should be non-nullable.
        /// For now, it's consistent with `PostId`.
        /// </summary>
        public Post Post { get; set; }

        /// <summary>
        /// Gets or sets the foreign key to the associated <see cref="Comment"/> if the notification relates to a comment.
        /// Nullable, as not all notifications are comment-related.
        /// </summary>
        public Guid? CommentId { get; set; }

        /// <summary>
        /// Gets or sets the navigation property to the associated <see cref="Comment"/>.
        /// Similar to `Post`, this is nullable based on `CommentId`.
        /// </summary>
        public Comment Comment { get; set; }

        /// <summary>
        /// Gets or sets the foreign key to the <see cref="User"/> who is the recipient of this notification.
        /// </summary>
        public string UserId { get; set; }

        /// <summary>
        /// Gets or sets the navigation property to the <see cref="User"/> who is the recipient of this notification.
        /// </summary>
        public User User { get; set; }
    }
}
