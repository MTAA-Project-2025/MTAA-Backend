using MTAA_Backend.Domain.Resources.Images;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MTAA_Backend.Domain.Entities.Images
{
    /// <summary>
    /// Represents a single image file within the system, often part of an <see cref="MyImageGroup"/>.
    /// This entity stores metadata about the image, including its path, dimensions, and type.
    /// </summary>
    public class MyImage
    {
        /// <summary>
        /// Gets or sets the unique identifier for the image.
        /// A new GUID is generated by default upon instantiation.
        /// </summary>
        public Guid Id { get; set; } = Guid.NewGuid();

        /// <summary>
        /// Gets or sets the short, relative path to the image file.
        /// </summary>
        public string ShortPath { get; set; }

        /// <summary>
        /// Gets or sets the full, absolute path to the image file.
        /// </summary>
        public string FullPath { get; set; }

        /// <summary>
        /// Gets or sets the MIME type or file extension of the image (e.g., "image/jpeg", "image/png").
        /// </summary>
        public string FileType { get; set; }

        /// <summary>
        /// Gets or sets the height of the image in pixels.
        /// </summary>
        public int Height { get; set; }

        /// <summary>
        /// Gets or sets the width of the image in pixels.
        /// </summary>
        public int Width { get; set; }

        /// <summary>
        /// Gets or sets the size type of the image (e.g., Small, Medium, Large, Original).
        /// This is typically used to manage different resolutions or versions of the same image.
        /// </summary>
        public ImageSizeType Type { get; set; }

        /// <summary>
        /// Gets or sets the aspect ratio of the image (width / height).
        /// Defaults to 1, but should be calculated based on the actual image dimensions.
        /// </summary>
        public double AspectRatio { get; set; } = 1;

        /// <summary>
        /// Gets or sets the navigation property to the <see cref="MyImageGroup"/> that this image belongs to.
        /// </summary>
        public MyImageGroup ImageGroup { get; set; }

        /// <summary>
        /// Gets or sets the foreign key to the associated <see cref="MyImageGroup"/>.
        /// </summary>
        public Guid ImageGroupId { get; set; }
    }
}
