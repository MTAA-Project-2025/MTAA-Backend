using Microsoft.EntityFrameworkCore;
using MTAA_Backend.Domain.Entities.Images;
using MTAA_Backend.Domain.Entities.Locations;
using MTAA_Backend.Domain.Entities.Notifications;
using MTAA_Backend.Domain.Entities.Posts.Comments;
using MTAA_Backend.Domain.Entities.Posts.RecommendationSystem;
using MTAA_Backend.Domain.Entities.Shared;
using MTAA_Backend.Domain.Entities.Users;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MTAA_Backend.Domain.Entities.Posts
{
    /// <summary>
    /// Represents a user's post, including its content, associated media, interactions, and scheduling information.
    /// Inherits from <see cref="BaseEntity"/> for common entity properties like creation and update timestamps.
    /// </summary>
    public class Post : BaseEntity
    {
        /// <summary>
        /// Gets or sets the unique identifier for the post.
        /// A new GUID is generated by default upon instantiation.
        /// </summary>
        public Guid Id { get; set; } = Guid.NewGuid();

        /// <summary>
        /// Gets or sets the textual description or caption of the post.
        /// </summary>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the collection of <see cref="MyImageGroup"/>s associated with this post.
        /// A post can have one or more image groups.
        /// Initialized as a new HashSet to ensure no null reference issues.
        /// </summary>
        public ICollection<MyImageGroup> Images { get; set; } = new HashSet<MyImageGroup>();

        /// <summary>
        /// Gets or sets the navigation property to the <see cref="User"/> who created this post.
        /// </summary>
        public User Owner { get; set; }

        /// <summary>
        /// Gets or sets the foreign key to the <see cref="User"/> who owns this post.
        /// </summary>
        public string OwnerId { get; set; }

        /// <summary>
        /// Gets or sets the collection of <see cref="PostLike"/>s received by this post.
        /// Initialized as a new HashSet.
        /// </summary>
        public ICollection<PostLike> Likes { get; set; } = new HashSet<PostLike>();

        /// <summary>
        /// Gets or sets the total count of likes received by this post.
        /// This is often a denormalized count for performance.
        /// </summary>
        public int LikesCount { get; set; }

        /// <summary>
        /// Gets or sets the collection of <see cref="Comment"/>s associated with this post.
        /// Initialized as a new HashSet.
        /// </summary>
        public ICollection<Comment> Comments { get; set; } = new HashSet<Comment>();

        /// <summary>
        /// Gets or sets the total count of comments on this post.
        /// This is often a denormalized count for performance.
        /// </summary>
        public int CommentsCount { get; set; }

        /// <summary>
        /// Gets or sets the <see cref="Location"/> associated with this post.
        /// Nullable, as a post may not have a location.
        /// </summary>
        public Location? Location { get; set; }

        /// <summary>
        /// Gets or sets a score representing the global popularity or relevance of the post.
        /// This can be used in recommendation algorithms.
        /// </summary>
        public double GlobalScore { get; set; }

        /// <summary>
        /// Gets or sets the version of this post data.
        /// This can be used for optimistic concurrency or change tracking.
        /// Defaults to 0.
        /// </summary>
        public int Version { get; set; } = 0;

        /// <summary>
        /// Gets or sets a value indicating whether the post is hidden from public view.
        /// </summary>
        public bool IsHidden { get; set; }

        /// <summary>
        /// Gets or sets the ID of a scheduled job (e.g., Hangfire job) if the post is scheduled for future publication.
        /// Nullable if not scheduled.
        /// </summary>
        public string? ScheduleJobId { get; set; }

        /// <summary>
        /// Gets or sets the date and time when the post is scheduled to be published.
        /// Nullable if not scheduled.
        /// </summary>
        public DateTime? SchedulePublishDate { get; set; }

        /// <summary>
        /// Gets or sets the reason why the post is hidden (e.g., "Violates community guidelines").
        /// Nullable if not hidden.
        /// </summary>
        public string? HiddenReason { get; set; }

        /// <summary>
        /// Gets or sets the collection of <see cref="User"/>s who have "watched" or saved this post.
        /// Initialized as a new HashSet.
        /// </summary>
        public ICollection<User> WatchedUsers { get; set; } = new HashSet<User>();

        /// <summary>
        /// Gets or sets the collection of <see cref="RecommendationItem"/>s where this post is recommended.
        /// Initialized as a new HashSet.
        /// </summary>
        public ICollection<RecommendationItem> RecommendationItems { get; set; } = new HashSet<RecommendationItem>();

        /// <summary>
        /// Gets or sets the collection of <see cref="Notification"/>s related to this post.
        /// Initialized as a new HashSet.
        /// </summary>
        public ICollection<Notification> Notifications { get; set; } = new HashSet<Notification>();
    }
}
